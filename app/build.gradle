plugins {
    id 'com.android.application'
    //id 'com.google.dagger.hilt.android'
}

//repositories {
//    maven {
//        url "https://repo.eclipse.org/content/repositories/paho-snapshots/"
//    }
//}
android {
    compileSdkVersion 28
    buildToolsVersion "30.0.2"
    defaultConfig {
        applicationId "com.siemav.uhf_g"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 36
        versionName "3.6"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    applicationVariants.configureEach { variant ->
        variant.outputs.configureEach {
            def fileName = "uhfg_v${defaultConfig.versionName}.apk"
            outputFileName = fileName
        }
    }
    buildTypes {
        debug {
            buildConfigField("String", "BUILD_TIME", getDate())
        }
        release {
            buildConfigField("String", "BUILD_TIME", getDate())
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

static String getDate() {
    Date date = new Date()
    return "\"" + date.format("yyyy-MM-dd HH:mm:ss", TimeZone.getTimeZone("GMT+08:00")) + "\""
}

dependencies {

    implementation 'com.android.support:appcompat-v7:28.0.0'
    //noinspection GradleCompatible
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.navigation:navigation-fragment:2.2.2'
    implementation 'androidx.navigation:navigation-ui:2.2.2'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation files('libs\\reader(1).jar')
    implementation files('libs\\ModuleAPI_J.jar')
    implementation files('libs\\App_Demo_API.jar')
    implementation files('libs\\DeviceAPIver20150204.jar')
    implementation files('libs\\logutil-1.5.1.1.jar')
    implementation files('libs\\UHF67_v3.6.jar')
    //implementation files('libs\\UHF67_v1.0.15.jar')
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'me.weyye.hipermission:library:1.0.7'
    implementation 'net.sourceforge.jexcelapi:jxl:2.6.12'
    implementation 'com.jakewharton:butterknife:10.1.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.1.0'
//    implementation 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.1.0'
//    implementation 'org.eclipse.paho:org.eclipse.paho.android.service:1.1.1'
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"
    implementation("androidx.multidex:multidex:2.0.1")
    implementation("io.reactivex.rxjava3:rxandroid:3.0.0") // For RxJava threading
    implementation("io.reactivex.rxjava3:rxjava:3.1.5")

    def room_version = "2.2.6"

    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"

    // optional - RxJava3 support for Room
    implementation("androidx.room:room-rxjava2:2.2.6") // RxJava 2 adapter for Room
    implementation("io.reactivex.rxjava3:rxjava:3.1.5") // RxJava 3
    implementation("com.github.akarnokd:rxjava3-retrofit-adapter:3.0.0") // RxJava 3 adapter for Retrofit (if using Retrofit)
    //implementation 'androidx.room:room-rxjava3:2.5.0'
    // To use Kotlin annotation processing tool (kapt)
    //kapt "androidx.room:room-compiler:$room_version"
    // To use Kotlin Symbol Processing (KSP)
    //ksp "androidx.room:room-compiler:$room_version"

}